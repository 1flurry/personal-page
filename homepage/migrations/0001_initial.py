# Generated by Django 2.0.2 on 2018-03-05 04:39

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user', models.CharField(max_length=128, verbose_name='用户名')),
                ('name', models.CharField(max_length=128, verbose_name='姓名')),
                ('address', models.CharField(max_length=256, verbose_name='地址')),
                ('number', models.CharField(max_length=128, verbose_name='联系方式')),
                ('email', models.CharField(max_length=128, verbose_name='邮箱')),
                ('sample_intro', models.TextField(verbose_name='简介')),
                ('Facebook_account', models.CharField(blank=True, max_length=128, verbose_name='Facebook账号')),
                ('Twitter_account', models.CharField(blank=True, max_length=128, verbose_name='Twitter账号')),
                ('Ins_account', models.CharField(blank=True, max_length=128, verbose_name='Ins账号')),
                ('Github_account', models.CharField(blank=True, max_length=128, verbose_name='GitHub账号')),
                ('image', models.ImageField(default='image/default.png', upload_to='image/%Y/%m', verbose_name='头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AwardAndCertification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award_or_certification', models.CharField(max_length=128, verbose_name='获奖情况及证书')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '获奖及证书',
                'verbose_name_plural': '获奖及证书',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='校名')),
                ('academic', models.CharField(choices=[('高中', '高中'), ('大专', '大专'), ('本科', '本科')], max_length=128, verbose_name='学历')),
                ('major', models.CharField(max_length=128, verbose_name='专业')),
                ('start_data', models.DateField(verbose_name='起始时间')),
                ('end_data', models.DateField(default=datetime.datetime.now, verbose_name='结束时间')),
                ('mark', models.CharField(blank=True, max_length=128, verbose_name='成绩')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '教育经历',
                'verbose_name_plural': '教育经历',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=128, verbose_name='公司名')),
                ('position', models.CharField(max_length=128, verbose_name='职位')),
                ('content', models.TextField(verbose_name='内容')),
                ('start_data', models.DateField(verbose_name='起始时间')),
                ('end_data', models.DateField(default=datetime.datetime.now, verbose_name='结束时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '工作经历',
                'verbose_name_plural': '工作经历',
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.TextField(verbose_name='兴趣爱好')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '兴趣爱好',
                'verbose_name_plural': '兴趣爱好',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=128, verbose_name='技能')),
                ('content', models.TextField(verbose_name='内容')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '工作技能',
                'verbose_name_plural': '工作技能',
            },
        ),
    ]
